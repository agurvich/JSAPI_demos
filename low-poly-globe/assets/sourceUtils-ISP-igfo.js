function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = ["assets/geometryEngineJSON-CxNLzKUZ.js","assets/geometryEngineBase-Dfu--tgq.js","assets/index-BqO8XNEn.js","assets/index-rovX6Grx.css","assets/json-Wa8cmqdu.js"]
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
import{dN as f,dO as h,dL as g,dP as m,a$ as p,dQ as y,dR as c,_ as w}from"./index-BqO8XNEn.js";import{n as _}from"./date-M6n_RqpC.js";class I{constructor(){this.code=null,this.description=null}}class b{constructor(e){this.error=new I,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=e}}function a(n){return new b(n)}class P{constructor(e){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=e}}function A(n){return new P(n)}const l=new Set;function F(n,e,t,d=!1){l.clear();for(const s in t){const r=n.get(s);if(!r)continue;const o=q(r,t[s]);if(l.add(r.name),r&&(d||r.editable)){const u=f(r,o);if(u)return a(h(u,r,o));e[r.name]=o}}for(const s of(n==null?void 0:n.requiredFields)??[])if(!l.has(s.name))return a(`missing required field "${s.name}"`);return null}function q(n,e){let t=e;return g(n)&&typeof e=="string"?t=parseFloat(e):m(n)&&e!=null&&typeof e!="string"?t=String(e):p(n)&&typeof e=="string"&&(t=_(e)),y(t)}let i;function G(n,e){if(!n||!c(e))return n;if("rings"in n||"paths"in n){if(i==null)throw new TypeError("geometry engine not loaded");return i.simplify(e,n)}return n}async function j(){return i==null&&(i=await w(()=>import("./geometryEngineJSON-CxNLzKUZ.js").then(n=>n.g),__vite__mapDeps([0,1,2,3,4]))),i}async function L(n,e){!c(n)||e!=="esriGeometryPolygon"&&e!=="esriGeometryPolyline"||await j()}export{A as d,a as f,L as j,F as p,G as y};

import{a as w,cJ as v,cK as k,cL as E,cH as $,cM as j,cC as J}from"./index-BqO8XNEn.js";import{t as O}from"./fetchService-DoW7ynd9.js";import{l as S,a as R,n as M,u as N,i as H,c as K,s as P,t as L,r as Q,e as F}from"./portalLayers-iH_stnEz.js";import{populateGroupLayer as q}from"./layersCreator-C4XRd17Z.js";import{t as z}from"./requestPresets-BibOovJp.js";async function le(e,a){const r=e.instance.portalItem;if(r!=null&&r.id)return await r.load(a),A(e),e.validateItem&&e.validateItem(r),B(e,a)}function A(e){const a=e.instance.portalItem;if(!(a!=null&&a.type)||!e.supportedTypes.includes(a.type))throw new w("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}'",{type:a==null?void 0:a.type,expectedType:e.supportedTypes.join(", ")})}async function B(e,a){const r=e.instance,t=r.portalItem;if(!t)return;const{url:s,title:n}=t,i=v(t,"portal-item");if(r.type==="group")return U(r,i,e);s&&r.type!=="media"&&r.read({url:s},i);const o=new F,l=await x(e,o,a);return l&&r.read(l,i),r.resourceReferences={portalItem:t,paths:i.readResourcePaths??[]},r.type!=="subtype-group"&&r.read({title:n},i),k(r,i)}async function U(e,a,r){const t=e.portalItem;if(!e.sourceIsPortalItem)return;const{title:s,type:n}=t;if(n==="Group Layer"){if(!E(t,"Map"))throw new w("portal:invalid-layer-item-typekeyword","'Group Layer' item without 'Map' type keyword is not supported");return V(e)}return e.read({title:s},a),W(e,r)}async function V(e){const a=e.portalItem,r=await a.fetchData("json");if(!r)return;const t=v(a,"web-map");e.read(r,t),await q(e,r,{context:t}),e.resourceReferences={portalItem:a,paths:t.readResourcePaths??[]}}async function W(e,a){var f;let r;const{portalItem:t}=e;if(!t)return;const s=t.type,n=a.layerModuleTypeMap;switch(s){case"Feature Service":case"Feature Collection":r=n.FeatureLayer;break;case"Stream Service":r=n.StreamLayer;break;case"Scene Service":r=n.SceneLayer;break;default:throw new w("portal:unsupported-item-type-as-group",`The item type '${s}' is not supported as a 'IGroupLayer'`)}const i=new F;let[o,l]=await Promise.all([r(),x(a,i)]),c=()=>o;if(s==="Feature Service"){const C=(f=S(l))==null?void 0:f.customParameters;l=t.url?await R(l,t.url,i):{};const g=M(l),u=N(l),d=H(l),y=[];if(g.length||u!=null&&u.length){g.length&&y.push("SubtypeGroupLayer"),u!=null&&u.length&&y.push("OrientedImageryLayer"),d!=null&&d.length&&y.push("CatalogLayer");const b=[];for(const p of y){const m=n[p];b.push(m())}const G=await Promise.all(b),I=new Map;y.forEach((p,m)=>{I.set(p,G[m])}),c=p=>p.layerType?I.get(p.layerType)??o:o}const D=await te(t.url,{customParameters:C,loadContext:i});return await h(e,c,l,D)}return s==="Scene Service"&&t.url&&(l=await K(t,l,i)),P(l)>0?await h(e,c,l):await X(e,c)}async function X(e,a){var s,n;const{portalItem:r}=e;if(!(r!=null&&r.url))return;const t=await z(r.url);t&&h(e,a,{layers:(s=t.layers)==null?void 0:s.map(L),tables:(n=t.tables)==null?void 0:n.map(L)})}async function h(e,a,r,t){var i;let s=r.layers||[];const n=r.tables||[];if(((i=e.portalItem)==null?void 0:i.type)==="Feature Collection"?(s.forEach((o,l)=>{var c;o.id=l,((c=o==null?void 0:o.layerDefinition)==null?void 0:c.type)==="Table"&&n.push(o)}),s=s.filter(o=>{var l;return((l=o==null?void 0:o.layerDefinition)==null?void 0:l.type)!=="Table"})):(s.reverse(),n.reverse()),s.forEach(o=>{const l=t==null?void 0:t(o);if(l||!t){const c=T(e,a(o),r,o,l);e.add(c)}}),n.length){const o=await $.FeatureLayer();n.forEach(l=>{const c=t==null?void 0:t(l);if(c||!t){const f=T(e,o,r,l,c);e.tables.add(f)}})}}function T(e,a,r,t,s){const n=e.portalItem,i={portalItem:n.clone(),layerId:t.id};t.url!=null&&(i.url=t.url);const o=new a(i);if("sourceJSON"in o&&(o.sourceJSON=s),o.type!=="subtype-group"&&o.type!=="catalog"&&(o.sublayerTitleMode="service-name"),n.type==="Feature Collection"){const l={origin:"portal-item",portal:n.portal||j.getDefault()};o.read(t,l);const c=r.showLegend;c!=null&&o.read({showLegend:c},l)}return o}async function x(e,a,r){if(e.supportsData===!1)return;const t=e.instance,s=t.portalItem;if(!s)return;let n=null;try{n=await s.fetchData("json",r)}catch{}if(_(t)){let i=null;const o=await Y(s,n,a);if((n!=null&&n.layers||n!=null&&n.tables)&&o>0){if(t.layerId==null){const l=M(n);t.layerId=t.type==="subtype-group"?l==null?void 0:l[0]:Q(n)}i=Z(n,t),i&&n.showLegend!=null&&(i.showLegend=n.showLegend)}return o>1&&"sublayerTitleMode"in t&&t.sublayerTitleMode!=="service-name"&&(t.sublayerTitleMode="item-title-and-service-name"),i}return n}async function Y(e,a,r){var n,i,o,l,c;if(a!=null&&a.layers&&(a!=null&&a.tables))return P(a);const t=J(e.url);if(!t)return 1;const s=await r.fetchServiceMetadata(t.url.path,{customParameters:(n=S(a))==null?void 0:n.customParameters}).catch(()=>null);return(((i=a==null?void 0:a.layers)==null?void 0:i.length)??((o=s==null?void 0:s.layers)==null?void 0:o.length)??0)+(((l=a==null?void 0:a.tables)==null?void 0:l.length)??((c=s==null?void 0:s.tables)==null?void 0:c.length)??0)}function Z(e,a){var s,n;const{layerId:r}=a,t=((s=e.layers)==null?void 0:s.find(i=>i.id===r))||((n=e.tables)==null?void 0:n.find(i=>i.id===r));return t&&ee(t,a)?t:null}function _(e){return e.type!=="stream"&&"layerId"in e}function ee(e,a){return!(a.type==="feature"&&"layerType"in e&&e.layerType==="SubtypeGroupLayer"||a.type==="subtype-group"&&!("layerType"in e))}async function te(e,a){const{layersJSON:r}=await O(e,a);if(!r)return null;const t=[...r.layers,...r.tables];return s=>t.find(n=>n.id===s.id)}export{le as load};
